<project name="rgd-pipelines" default="build" basedir=".">

    <property name="svn.head.revision" value="20148"/>
    <property name="src.dir" value="src"/>
    <property name="build.dir" value="classes"/>
    <property name="lib.dir" value="lib"/>
    <property name="doc.dir" value="docs"/>
    <property name="logs.dir" value="logs"/>
    <property name="dist.dir" value="dist"/>
    <property name="name" value="rgd-pipelines"/>
    <property name="version" value="1.0.7"/>

    <path id="master-classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- Remove old build files -->
    <target name="clean" description="Clean output directories">
        <mkdir dir="${build.dir}"/>
        <delete>
            <fileset dir="${build.dir}" includes="**/*.class"/>
        </delete>
        <delete file="${lib.dir}/${name}-${version}.jar" failonerror="false"/>
    </target>

    <!--Prepare for build -->
    <target name="prepare" description="Prepare for build">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${doc.dir}"/>
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${logs.dir}"/>
    </target>

	<!-- Compile all of our class files -->
	<target name="compile" depends="prepare" description="Compile .java files into .class files">
        <javac destdir="${build.dir}" target="1.8" source="1.8" debug="true"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
	</target>

    <target name="build" depends="compile" description="Compile main source tree java files and build war file">
        <!-- Create jar file with custom MANIFEST.FM -->
        <delete file="MANIFEST.FM"/>
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
        </tstamp>

        <!-- Convert project class path to string property as required by MANIFEST.FM spec -->
        <pathconvert property="mf.classpath" pathsep=" " dirsep="/">
            <path refid="master-classpath" />
            <chainedmapper>
                <flattenmapper />
                <globmapper from="*.jar" to="lib/*.jar" />
            </chainedmapper>
        </pathconvert>

        <manifest file="MANIFEST.FM">
            <attribute name="Main-Class" value="edu.mcw.rgd.pipelines.PipelineManager"/>
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Built-Date" value="${TODAY}"/>
            <attribute name="Class-Path" value="${mf.classpath}"/>
            <attribute name="RGD-Svn-Revision" value="${svn.head.revision}"/>
            <attribute name="App-Version" value="${name}-${version}"/>
        </manifest>

        <jar destfile="${lib.dir}/${name}-${version}.jar"
                manifest="MANIFEST.FM">
            <fileset dir="${build.dir}">
            </fileset>
        </jar>
        <delete file="MANIFEST.FM" failonerror="true"/>
    </target>

    <!-- create distribution directory -->
    <target name="dist" depends="build" description="Create distribution directory with files ready for deployment">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/${lib.dir}"/>
        <mkdir dir="${dist.dir}/${logs.dir}"/>
        <copy todir="${dist.dir}/${lib.dir}">
            <fileset dir="${lib.dir}">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
        <move todir="${dist.dir}" file="${dist.dir}/${lib.dir}/${name}-${version}.jar"/>

    </target>

    <target name="clean+dist" depends="clean, dist" description="Run cleanup, then build distribution">
    </target>

    <target name="dist+docs" depends="dist" description="Full distribution plus javadoc" >
        <mkdir dir="docs"/>
        <javadoc
               destdir="docs/${name}"
               author="true"
               version="true"
               use="true"
               windowtitle="${name}">
        <classpath refid="master-classpath"/>
        <fileset dir="src" defaultexcludes="yes">
        </fileset>
      </javadoc>
    </target>

</project>
